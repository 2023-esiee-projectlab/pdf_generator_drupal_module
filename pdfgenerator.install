<?php
	/**
	 * @file pdfgenerator.install
	 *
	 * Ce fichier contient les fonctions d'installation et de désinstallation du module PDF Generator.
	 * Il permet de gérer la table des configurations de PDF Generator.
	 */

	// Importattions des classes nécessaires.
	use Drupal\Core\Database\Database;

	/*
	 * Fonction de création de la table des configurations de PDF Generator.
	 *
	 * name_module = 'pdf_generator';
	 * table = 'pdf_generator_drupal_module_settings';
	 *
	 * Celui-ci à pour champs :
	 * - name - varchar(64) - non null - description : 'Name'
	 * - int - int(10) - non null - description : 'int'
	 * - boolean - boolean - non null - description : 'boolean'
	 * - string - varchar(255) - non null - description : 'string'
	 * Avec pour clé primaire : name
	 *
	 * @return void
	*/
	function pdfgenerator_install() {
		// Créer la table lors de l'installation.
		$schema = Database::getConnection()->schema();
		//$table_schema = $schema->getTableSchema('pdf_generator_drupal_module_settings');
		//if (!$table_schema) {
			$schema->createTable('pdf_generator_drupal_module_settings', [
				'fields' => [
					'name' => [
						'type' => 'varchar',
						'length' => 64,
						'not null' => TRUE,
						'description' => 'Name',
					],
					'int' => [
						'type' => 'int',
						'length' => 10,
						'not null' => TRUE,
						'description' => 'int',
					],
					'boolean' => [
						'type' => 'boolean',
						'not null' => TRUE,
						'description' => 'boolean',
					],
					'string' => [
						'type' => 'varchar',
						'length' => 255,
						'not null' => TRUE,
						'description' => 'string',
					],
				],
				//Clé primaire
				//'primary key' => ['name'],
			]);
		//}
	}

	/**
	 * Fonction de suppression de la table des configurations de PDF Generator.
	 *
	 * @return void
	 */
	function pdfgenerator_uninstall() {
		// Supprimer la table lors de la désinstallation.
		$schema = Database::getConnection()->schema();
		$schema->dropTable('pdf_generator_drupal_module_settings');
	}

	/**
	 * Fonction d'insertion de données dans la table des configurations de PDF Generator.
	 *
	 * @param $name
	 * @param $int
	 * @param $boolean
	 * @param $string
	 * @return void
	 * @throws Exception
	 */
	function pdfgenerator_insert_data($name, $int, $boolean, $string) {
		// Insérer des données dans la table.
		$connection = Database::getConnection();
		$connection->insert('pdf_generator_drupal_module_settings')
			->fields([
				'name' => $name,
				'int' => $int,
				'boolean' => $boolean,
				'string' => $string,
			])
			->execute();
	}

	/**
	 * Fonction de lecture de données dans la table des configurations de PDF Generator.
	 *
	 * @param $name
	 * @param $int
	 * @param $boolean
	 * @param $string
	 * @return void
	 * @throws Exception
	 */
	function pdfgenerator_get_data() {
		// Récupérer des données depuis la table.
		$connection = Database::getConnection();
		$query = $connection->select('pdf_generator_drupal_module_settings', 'pt');
		$query->fields(
			'mt',
			['name', 'int', 'boolean', 'string']
		);
		$results = $query->execute()->fetchAll();

		return $results;
	}

	/**
	 * Fonction de mise à jour de données dans la table des configurations de PDF Generator.
	 *
	 * @param $name
	 * @param $int
	 * @param $boolean
	 * @param $string
	 * @return void
	 * @throws Exception
	 */
	function pdfgenerator_update_data($name, $int, $boolean, $string) {
// Mettre à jour des données dans la table.
		$connection = Database::getConnection();
		$connection->update('pdf_generator_drupal_module_settings')
			->fields([
				'name' => $name,
				'int' => $int,
				'boolean' => $boolean,
				'string' => $string,
			])
			->condition('name', $name)
			->execute();
	}
